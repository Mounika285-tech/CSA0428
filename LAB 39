#include <stdio.h>

void cscan(int arr[], int size, int head, int total_cylinders) {
    int seek_sequence[size + 1];
    int distance, total_distance = 0, index = 0;

    // Sort the request array
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    // Service requests in one direction
    for (int i = 0; i < size; i++) {
        if (arr[i] >= head) {
            seek_sequence[index++] = head;
            distance = arr[i] - head;
            total_distance += distance;
            head = arr[i];
            seek_sequence[index++] = head;
        }
    }

    // Jump to the beginning of the disk
    total_distance += (total_cylinders - 1 - head);
    head = 0;
    total_distance += (total_cylinders - 1);

    // Service remaining requests
    for (int i = 0; i < size; i++) {
        if (arr[i] < head) {
            seek_sequence[index++] = head;
            distance = arr[i] - head;
            total_distance += distance;
            head = arr[i];
            seek_sequence[index++] = head;
        }
    }

    printf("Total Seek Distance: %d\n", total_distance);
    printf("Seek Sequence: ");
    for (int i = 0; i < index; i++) {
        printf("%d ", seek_sequence[i]);
    }
    printf("\n");
}

int main() {
    int requests[] = { 98, 183, 37, 122, 14, 124, 65, 67 };
    int size = sizeof(requests) / sizeof(requests[0]);
    int head = 53; // Initial head position
    int total_cylinders = 200; // Total number of cylinders

    cscan(requests, size, head, total_cylinders);
    return 0;
}
